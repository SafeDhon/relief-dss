import { initializeApp } from "https://www.gstatic.com/firebasejs/10.13.2/firebase-app.js";
import {
  getFirestore,
  doc,
  getDoc,
  collection,
  getDocs,
  updateDoc,
} from "https://www.gstatic.com/firebasejs/10.13.2/firebase-firestore.js";

const firebaseConfig = {
  apiKey: "AIzaSyB9NIxqa9__0x9JSZplX2PS6ozqyRUPAQQ",
  authDomain: "relief-dss.firebaseapp.com",
  projectId: "relief-dss",
  storageBucket: "relief-dss.firebasestorage.app",
  messagingSenderId: "678196707176",
  appId: "1:678196707176:web:b24a49511e2674f1d1a0dd",
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function findDelivery(address, deliveries) {
  for (const item of deliveries) {
    for (const key of Object.keys(item)) {
      if (Array.isArray(item[key])) {
        for (const obj of item[key]) {
          if (obj["‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á"] === address) {
            return obj["‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"] === 1;
          }
        }
      }
    }
  }
  return false;
}

async function fetchRescueData() {
  const refID = sessionStorage.getItem("refID");

  if (!refID) {
    console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö refID ‡πÉ‡∏ô sessionStorage");
    return null;
  }

  try {
    // ‡∏î‡∏∂‡∏á document ‡∏´‡∏•‡∏±‡∏Å
    const docRef = doc(db, "rescueData", refID);
    const docSnap = await getDoc(docRef);

    if (!docSnap.exists()) {
      console.log("‚ùå Document ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô Firestore");
      return null;
    }

    const mainData = docSnap.data();

    // ‡∏î‡∏∂‡∏á checkList
    const checkListRef = collection(docRef, "checkList");
    const checkListSnap = await getDocs(checkListRef);

    const checkListData = checkListSnap.docs.map((d) => ({
      ...d.data(),
    }));
    console.log(checkListData[4]);

    checkListData.pop(); // ‡∏ï‡∏±‡∏î‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° field "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"
    async function markDeliveryStatus(mainData, checkListData) {
      for (const item of mainData._data) {
        const delivered = await findDelivery(item.address, checkListData);
        item["‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"] = delivered ? 1 : 0;
      }
    }

    await markDeliveryStatus(mainData, checkListData);

    // ‚úÖ return mainData
    return mainData;
  } catch (error) {
    console.error("üî• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    return null;
  }
}

const paramMapping = {
  param2: {
    // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
    1: "‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 30%",
    2: "30% -70%",
    3: "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 70%",
  },
  param3: {
    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏∂‡πà‡∏á‡∏û‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á
    1: "‡∏à‡∏±‡∏î‡∏´‡∏≤‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ",
    2: "‡∏à‡∏±‡∏î‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á",
    3: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏£",
  },
  param4: {
    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
    1: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥",
    2: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á",
    3: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
  },
  param5: {
    // ‡πÉ‡∏ä‡πâ‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á ‡∏ó‡∏≠. ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    1: "‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô",
    3: "‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô",
  },
  param6: {
    // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏†‡∏±‡∏¢
    1: "‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 24 ‡∏ä‡∏°.",
    2: "24 ‡∏ä‡∏°. - 48 ‡∏ä‡∏°.",
    3: "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 48 ‡∏ä‡∏°.",
  },
  param7: {
    // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á
    1: "‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢",
    2: "‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏ö‡∏≤‡∏á‡∏à‡∏∏‡∏î",
    3: "‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
  },
  param8: {
    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥
    1: "‡∏ô‡πâ‡∏≠‡∏¢",
    2: "‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á",
    3: "‡∏°‡∏≤‡∏Å",
  },
  vehicle: {
    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥
    1: "‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å",
    2: "‡∏£‡∏ñ‡∏¢‡∏π‡∏ô‡∏¥‡∏°‡πá‡∏≠‡∏Å",
    3: "‡πÄ‡∏£‡∏∑‡∏≠",
    4: "‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå",
  },
  wings: {
    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥
    1: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 1",
    2: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 2",
    3: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 3",
    4: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 4",
    5: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 5",
    6: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 6",
    7: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 7",
    21: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 21",
    23: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 23",
    41: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 41",
    46: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 46",
    56: "‡∏Å‡∏≠‡∏á‡∏ö‡∏¥‡∏ô 56",
    100: "‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏ô",
  },
};

function renderMainTable(mainData) {
  const container = document.getElementById("mainTable");
  if (!container) return;

  const data = mainData._data;
  if (!data || data.length === 0) {
    container.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô mainData</p>";
    return;
  }

  let html = `
    <table class="main-table">
      <colgroup>
        <col style="width: 1%" />
        <col style="width: 12%" />
        <col style="width: 5%" />
        <col style="width: 5%" />
        <col style="width: 4%" />
        <col style="width: 6%" />
        <col style="width: 6%" />
        <col style="width: 6%" />
        <col style="width: 5%" />
        <col style="width: 7%" />
        <col style="width: 7%" />
        <col style="width: 5%" />
        <col style="width: 5%" />
        <col style="width: 2%" />
      </colgroup>
      <thead>
        <tr>
          <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
          <th>‡∏ä‡∏∏‡∏°‡∏ä‡∏ô</th>
          <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏†‡∏±‡∏¢</th>
          <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á</th>
          <th>‡∏ñ‡∏∏‡∏á‡∏¢‡∏±‡∏á‡∏ä‡∏µ‡∏û</th>
          <th>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢</th>
          <th>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏∂‡πà‡∏á‡∏û‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á</th>
          <th>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</th>
          <th>‡πÉ‡∏ä‡πâ‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á ‡∏ó‡∏≠.‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</th>
          <th>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏†‡∏±‡∏¢</th>
          <th>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á</th>
          <th>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥</th>
          <th>‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞</th>
          <th>‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</th>
         
        </tr>
      </thead>
      <tbody>
  `;

  data.forEach((item, i) => {
    html += `
      <tr>
        <td>${i + 1}</td>
        <td>${item.address ?? "-"}</td>
        <td>${item.victim ?? "-"}</td>
        <td>${item.vulnerable ?? "-"}</td>
        <td>${item.survivalBag ?? "-"}</td>
        <td>${paramMapping.param2[item.parameter[2]] ?? "-"}</td>
        <td>${paramMapping.param3[item.parameter[3]] ?? "-"}</td>
        <td>${paramMapping.param4[item.parameter[4]] ?? "-"}</td>
        <td>${paramMapping.param5[item.parameter[5]] ?? "-"}</td>
        <td>${paramMapping.param6[item.parameter[6]] ?? "-"}</td>
        <td>${paramMapping.param7[item.parameter[7]] ?? "-"}</td>
        <td>${paramMapping.param8[item.parameter[8]] ?? "-"}</td>
        <td>${paramMapping.vehicle[item.vehicle] ?? "-"}</td>
        <td>${item["‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"] === 1 ? "‚úî" : "‚úò"}</td>
      </tr>
    `;
  });

  html += `
      </tbody>
    </table>
  `;

  container.innerHTML = html;
}

function updateHeader(mainData) {
  const wing = mainData.wing ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà";
  const area = paramMapping.wings[wing];
  const dateRaw = mainData.date ?? ""; // ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô Timestamp ‡∏´‡∏£‡∏∑‡∏≠ yyyy-mm-dd

  const areaElem = document.getElementById("areaName");
  const dateElem = document.getElementById("eventDate");

  if (areaElem) areaElem.textContent = area;

  if (dateElem && dateRaw) {
    const date = new Date(dateRaw);
    const formattedDate = date.toLocaleDateString("th-TH", {
      year: "numeric",
      month: "long",
      day: "numeric",
    });
    dateElem.textContent = formattedDate;
  }
}

(async () => {
  const mainData = await fetchRescueData();
  if (mainData) {
    updateHeader(mainData);
    renderMainTable(mainData);
  }
})();
